# Generated by Django 5.2 on 2025-04-18 11:10

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Catagoriesofitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Catagory_name', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'Catagories_on_this_web',
            },
        ),
        migrations.CreateModel(
            name='DynamicModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pagetitle', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'DynamicPages',
            },
        ),
        migrations.CreateModel(
            name='Slidermaintain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(upload_to='SliderImage')),
                ('idetity_urls', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'sliders',
            },
        ),
        migrations.CreateModel(
            name='CardDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='product')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='product')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='product')),
                ('cardtitle', models.CharField(max_length=500)),
                ('Description', models.TextField()),
                ('Description_of_product', models.TextField()),
                ('unit_of_measurement', models.CharField(choices=[('kg', 'Kilogram (kg)'), ('g', 'Gram (g)'), ('qt', 'Quintal (qt)'), ('ton', 'Metric Ton (ton)'), ('lbs', 'Pounds (lbs)'), ('oz', 'Ounce (oz)'), ('l', 'Liter (L)'), ('ml', 'Milliliter (ml)'), ('gal', 'Gallon (gal)'), ('pt', 'Pint (pt)'), ('fl_oz', 'Fluid Ounce (fl oz)'), ('m2', 'Square Meter (m²)'), ('ha', 'Hectare (ha)'), ('ac', 'Acre (ac)'), ('km2', 'Square Kilometer (km²)')], default='kg', max_length=20)),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('discount', models.CharField(max_length=500)),
                ('availablity', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('limited', 'Limited')], default='yes', max_length=10)),
                ('max_product', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.catagoriesofitems')),
            ],
            options={
                'db_table': 'Cards',
            },
        ),
        migrations.CreateModel(
            name='GrowthSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.carddetails')),
            ],
            options={
                'db_table': 'Growth_by_Admin',
            },
        ),
        migrations.CreateModel(
            name='OffersSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.carddetails')),
            ],
            options={
                'db_table': 'offers_by_Admin',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.carddetails')),
            ],
            options={
                'db_table': 'orderItem',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(through='portal.OrderItem', to='portal.carddetails'),
        ),
        migrations.CreateModel(
            name='Recomendations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.carddetails')),
            ],
            options={
                'db_table': 'Recommendations_by_Admin',
            },
        ),
        migrations.CreateModel(
            name='SeasonalSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.carddetails')),
            ],
            options={
                'db_table': 'Seasonal_by_Admin',
            },
        ),
        migrations.CreateModel(
            name='SeedsSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.carddetails')),
            ],
            options={
                'db_table': 'Seeds_by_Admin',
            },
        ),
        migrations.CreateModel(
            name='SmartfarmingSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.carddetails')),
            ],
            options={
                'db_table': 'smartfarming_by_Admin',
            },
        ),
        migrations.CreateModel(
            name='SpraySection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.carddetails')),
            ],
            options={
                'db_table': 'Spray_by_Admin',
            },
        ),
        migrations.CreateModel(
            name='SubCatagoriesofitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subCatagory_name', models.CharField(max_length=500)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SubCatagoriesofitems', to='portal.catagoriesofitems')),
            ],
            options={
                'db_table': 'subCatagories_on_this_web',
            },
        ),
        migrations.CreateModel(
            name='ProductsOfthisWeb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='product')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='product')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='product')),
                ('product_name', models.CharField(max_length=500)),
                ('Description', models.TextField()),
                ('Description_of_product', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('reviews', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('unit_of_measurement', models.CharField(choices=[('kg', 'Kilogram (kg)'), ('g', 'Gram (g)'), ('qt', 'Quintal (qt)'), ('ton', 'Metric Ton (ton)'), ('lbs', 'Pounds (lbs)'), ('oz', 'Ounce (oz)'), ('l', 'Liter (L)'), ('ml', 'Milliliter (ml)'), ('gal', 'Gallon (gal)'), ('pt', 'Pint (pt)'), ('fl_oz', 'Fluid Ounce (fl oz)'), ('m2', 'Square Meter (m²)'), ('ha', 'Hectare (ha)'), ('ac', 'Acre (ac)'), ('km2', 'Square Kilometer (km²)')], default='kg', max_length=20)),
                ('discount', models.CharField(max_length=500)),
                ('availablity', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('limited', 'Limited')], default='yes', max_length=10)),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('rating', models.FloatField(default=0.0)),
                ('max_product', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.catagoriesofitems')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.subcatagoriesofitems')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.AddField(
            model_name='carddetails',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.subcatagoriesofitems'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('companyBrandName', models.CharField(blank=True, max_length=500, null=True)),
                ('Address', models.CharField(blank=True, max_length=500, null=True)),
                ('City', models.CharField(blank=True, max_length=500, null=True)),
                ('State', models.CharField(blank=True, max_length=500, null=True)),
                ('Zip', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserProfiles',
            },
        ),
    ]
